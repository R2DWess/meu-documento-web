"use strict";(self.webpackChunkmeu_documento_web=self.webpackChunkmeu_documento_web||[]).push([[5456],{5936:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>t,contentTitle:()=>n,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var a=s(7624),r=s(2172);const i={title:"Par\xe2metros",sidebar_position:4},n=void 0,d={id:"linguagens/protocolos/rest/1.3-parametros",title:"Par\xe2metros",description:"Par\xe2metros",source:"@site/docs/linguagens/protocolos/rest/1.3-parametros.md",sourceDirName:"linguagens/protocolos/rest",slug:"/linguagens/protocolos/rest/1.3-parametros",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.3-parametros",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linguagens/protocolos/rest/1.3-parametros.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Par\xe2metros",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Request e Response",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.2-request-response"},next:{title:"Status Code",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.4-status"}},t={},c=[{value:"Par\xe2metros",id:"par\xe2metros",level:2},{value:"O que s\xe3o Path Params",id:"o-que-s\xe3o-path-params",level:3},{value:"Query Params",id:"query-params",level:3},{value:"<strong>Diferen\xe7a e Flexibilidade:</strong>",id:"diferen\xe7a-e-flexibilidade",level:4},{value:"Conclus\xe3o",id:"conclus\xe3o",level:4},{value:"Header Params: O cart\xe3o de Acesso da Biblioteca",id:"header-params-o-cart\xe3o-de-acesso-da-biblioteca",level:3},{value:"Body: O Conte\xfado da nossa bolsa de livros",id:"body-o-conte\xfado-da-nossa-bolsa-de-livros",level:3}];function l(e){const o={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h2,{id:"par\xe2metros",children:"Par\xe2metros"}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Tipos de par\xe2metros usados em REST"})}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Path Params:"})," S\xe3o par\xe2metros passados via URL e s\xe3o obrigat\xf3rios. Ou seja, caso n\xe3o seja definido nenhum valor, ele ir\xe1 lan\xe7ar um erro de valida\xe7\xe3o ou far\xe1 uma request para outra opera\xe7\xe3o, similar, que use o mesmo verbo."]}),"\n",(0,a.jsx)(o.p,{children:"\ud83d\udcad Imagine uma URL que nos permita recuperar uma lista de livros de forma p\xe1ginada. Essa URL cont\xe9m 3 path params, sendo eles SORT, Page Size e Current Page."}),"\n",(0,a.jsx)(o.p,{children:"Podemos ent\xe3o, por exemplo, setar ask para uma ordena\xe7\xe3o ascendente em SORT, dez para uma p\xe1gina com dez itens e um para come\xe7ar na p\xe1gina um. Todos esses par\xe2metros s\xe3o passados via path."}),"\n",(0,a.jsx)(o.p,{children:"\ud83d\udcad Imagine que queremos usar um cat\xe1logo online de uma biblioteca para buscar livros. O cat\xe1logo permite que possamos especificar exatamente como queremos que os livros sejam listados: em que ordem (por exemplo, alfab\xe9tica), quantos livros por p\xe1gina queremos ver (tamanho da p\xe1gina) e em qual p\xe1gina do cat\xe1logo desejamos visualizar primeiro."}),"\n",(0,a.jsx)(o.p,{children:"Aqui, a URL do cat\xe1logo online \xe9 como uma pergunta espec\xedfica que podemos fazer ao bibliotec\xe1rio. Se n\xe3o oferecermos todas as partes da pergunta (os par\xe2metros), o bibliotec\xe1rio pode n\xe3o saber o que estamos pedindo e nos pedir\xe1 que sejamos mais especificos."}),"\n",(0,a.jsx)(o.h3,{id:"o-que-s\xe3o-path-params",children:"O que s\xe3o Path Params"}),"\n",(0,a.jsxs)(o.p,{children:["No desenvolvimento de APIs web, os ",(0,a.jsx)(o.strong,{children:"Path Params"}),' (ou par\xe2metros de caminho) s\xe3o partes da URL que especificam os dados que queremos recuperar ou a opera\xe7\xe3o que desejamos realizar. Eles s\xe3o chamados de "path" porque est\xe3o literalmente no caminho (URI) que acessamos. S\xe3o considerados obrigat\xf3rios porque a opera\xe7\xe3o que estamos tentando realizar depende desses par\xe2metros para ser executada corretamente.']}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Exemplo com a Lista de Livros Paginada"})}),"\n",(0,a.jsx)(o.p,{children:"Vamos usar o exemplo da lista de livros paginada. A URL para acessar essa lista pode parecer algo assim:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-ruby",children:"https://exemplo.com/livros/sort/ask/pageSize/dez/currentPage/um'\r\n\n"})}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Neste caso:"})}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"SORT:"})," \xe9 o par\xe2metro que define a ordem dos livros 'ask' significa que queremos os livros em ordem crescente."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"'pageSize'"})," define quantos itens queremos ver por p\xe1gina. 'dez' significa que queremos ver 10 itens em cada p\xe1gina."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"'currentPage'"})," indica a p\xe1gina atual que queremos visualizar. 'um' significa que queremos come\xe7ar pela primeira p\xe1gina."]}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Obrigatoriedade:"})}),"\n",(0,a.jsx)(o.p,{children:"Se tentarmos acessar a URL sem especificar um desses par\xe2metros, a API n\xe3o saber\xe1 como processar nossa solicita\xe7\xe3o corretamente. Por exemplo, se n\xe3o especificarmos pageSize, como a API saber\xe1 quantos itens retornar por p\xe1gina? Isso pode resultar em um erro de valida\xe7\xe3o, pois a API espera essas informa\xe7\xf5es para funcionar corretamente."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Valida\xe7\xe3o e Erros:"})}),"\n",(0,a.jsx)(o.p,{children:"Se os par\xe2metros n\xe3o forem fornecidos ou forem fornecidos de forma incorreta, a API pode retornar um erro, indicando que algo est\xe1 faltando ou est\xe1 errado na sua solicita\xe7\xe3o."}),"\n",(0,a.jsx)(o.h3,{id:"query-params",children:"Query Params"}),"\n",(0,a.jsx)(o.p,{children:"\ud83d\udcad Imagine que, al\xe9m de especifciar a ordem, o tamanho da p\xe1gina e a p\xe1gina atual na sua busca de lviros, tamb\xe9m queremos filtrar os livros por g\xeanero, autor ou ano de publica\xe7\xe3o. Esses filtros adicionais s\xe3o como perguntas extras que fazeomos ao bibliotec\xe1rio para refinar a busca."}),"\n",(0,a.jsx)(o.p,{children:"Na biblioteca online, ao inv\xe9s de apenas dizer ao bibliotec\xe1rio como listar os livros, agora tamb\xe9m pedimos para ver apenas os lviros de fic\xe7\xe3o cientifica, escritos por um autor espec\xedfico, ou publicados em um certo ano. Esses detalhes extras s\xe3o como ajustes na nossa solicita\xe7\xe3o."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Afinal, o que \xe9 Query Param?"})}),"\n",(0,a.jsx)(o.p,{children:"Os Query Params s\xe3o par\xe2metros adicionados ao final de uma URL para dar precis\xe3o e fazer uma melhor filtragem das informa\xe7\xf5es ou dados que desejamos obter de uma API. Eles come\xe7am ap\xf3s o caractere de interroga\xe7\xe3o '?' e s\xe3o separados por '&' quando h\xe1 mais de um."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Exemplo com a Lista de Livros Paginada:"})}),"\n",(0,a.jsx)(o.p,{children:"Utilizando o exemplo anterior da lista de livros paginada, se quisermos adicionar filtros para g\xeanero, autor e ano, a URL pode parecer algo assim:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-ruby",children:"https://exemplo.com/livros?genero=ficcao-cientifica&autor=Asimov&ano=1950\r\n\n"})}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Neste caso:"})}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"genero"})," \xe9 um query param que filtra livros por g\xeanero. ",(0,a.jsx)(o.em,{children:"ficcao-cientifica"})," indica que estamos interessados apenas em livros desse g\xeanero."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"autor"})," filtra os livros pelo nome do autor. ",(0,a.jsx)(o.em,{children:"Asimov"})," significa que queremos livros escritos por Asimov."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"ano"})," indica o ano de publica\xe7\xe3o dos livros que queremos ver. ",(0,a.jsx)(o.em,{children:"1950"})," filtra para mostrar apenas os livros publicados nesse ano."]}),"\n"]}),"\n",(0,a.jsx)(o.h4,{id:"diferen\xe7a-e-flexibilidade",children:(0,a.jsx)(o.strong,{children:"Diferen\xe7a e Flexibilidade:"})}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Flexibilidade:"})," Diferentemente dos Path Params, os Query Params s\xe3o opcionais. Podemos us\xe1-los para refinar nossa busca, mas a solicita\xe7\xe3o b\xe1sica ainda ser\xe1 processada sem eles. Isso oferece uma grande flexibilidade para o usu\xe1rio ajustar a busca conforme necess\xe1rio."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Multiplicidade:"})," Podemos ter v\xe1rios Query Params na mesma URL, cada um ajustando diferentes aspectos da nossa solicita\xe7\xe3o."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h4,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,a.jsxs)(o.p,{children:["Os ",(0,a.jsx)(o.em,{children:"Query Params"})," permitem uma intera\xe7\xe3o mais detalhada e personalizada com a API, oferecendo aos usu\xe1rios a capacidade de filtrar e ajustar os dados solicitados de acordo com suas necessidades espec\xedficas. Voltando \xe0 nossa analogia, \xe9 como fazer perguntas adicionais ao bibliotec\xe1rio para garantir que os livros retornados sejam exatamente os que voc\xea est\xe1 procurando, baseados em crit\xe9rios muito espec\xedficos."]}),"\n",(0,a.jsx)(o.h3,{id:"header-params-o-cart\xe3o-de-acesso-da-biblioteca",children:"Header Params: O cart\xe3o de Acesso da Biblioteca"}),"\n",(0,a.jsx)(o.p,{children:"\ud83d\udcad Imagine que, ao entrar na biblioteca online, n\xf3s precisamos de um cart\xe3o de acesso especial que informe ao sistema quem somos e quais os servi\xe7os que temos permiss\xe3o para acessar. Este cart\xe3o pode tamb\xe9m conter prefer\xeancia como o idioma que voc\xea fala ou a regi\xe3o de onde voc\xea est\xe1 acessando a biblioteca."}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Header Params:"})," s\xe3o como este cart\xe3o de acesso. Eles s\xe3o enviados no cabe\xe7alho (header) da requisi\xe7\xe3o HTTP e podem conter uma variedade de informa\xe7\xf5es sobre a requisi\xe7\xe3o ou o cliente que est\xe1 fazendo a requisi\xe7\xe3o. Eles s\xe3o usados para:"]}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Autentica\xe7\xe3o e autoriza\xe7\xe3o (por exemplo, tokens de acesso);"}),"\n",(0,a.jsx)(o.li,{children:"Informa\xe7\xf5es sobre o tipo de conte\xfado que est\xe1 sendo enviado ou esperado na resposta ('Content Type' e 'Accept')"}),"\n",(0,a.jsx)(o.li,{children:"Controles de cache"}),"\n",(0,a.jsx)(o.li,{children:"Informa\xe7\xf5es sobre o idioma ('Accept-Language')"}),"\n",(0,a.jsx)(o.li,{children:"E muitos outros prop\xf3sitos"}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"Os Header Params n\xe3o s\xe3o vis\xedveis na URL e, portanto, oferecem um meio seguro de transmitir informa\xe7\xf5es sens\xedveis e controlar o comportamento da requisi\xe7\xe3o e da resposta."}),"\n",(0,a.jsx)(o.h3,{id:"body-o-conte\xfado-da-nossa-bolsa-de-livros",children:"Body: O Conte\xfado da nossa bolsa de livros"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.img,{alt:"alt text",src:s(6280).c+"",width:"1024",height:"1024"}),"\r\nQuando fazemos uma requisi\xe7\xe3o que envolve o envio de dados complexos ou volumosos, como cadastrar um novo livro no cat\xe1logo ou fazer uma atualiza\xe7\xe3o em massa, \xe9 como se tivessemos trazendo uma bolsa de livros para adicionar \xe0 biblioteca."]}),"\n",(0,a.jsx)(o.p,{children:"O Body (corpo) da requisi\xe7\xe3o \xe9 usado para enviar esses dados. Diferente dos par\xe2metros de URL ou cabe\xe7alho, o corpo pode conter informa\xe7\xf5es estruturadas em formatos como JSON, XML, texto simples, dados de formul\xe1rios e at\xe9 mesmo arquivos bin\xe1rios. Isso permite que dados complexos detalhados sejam enviados em uma \xfanica requisi\xe7\xe3o."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Exemplo:"})}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Criando ou atualizando registros (como adicionar um novo livro com todos os detalhes);"}),"\n",(0,a.jsx)(o.li,{children:"Enviando formul\xe1tios;"}),"\n",(0,a.jsx)(o.li,{children:"Fazendo uploads de arquivos;"}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"\u2755O corpo \xe9 essencial para opera\xe7\xf5es que requerem mais do que simples par\xe2metros de identifica\xe7\xe3o ou configura\xe7\xe3o, permitindo uma comunica\xe7\xe3o rica e detalhada com a API."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Conclus\xe3o:"})}),"\n",(0,a.jsx)(o.p,{children:"Header Params e Body s\xe3o fundamentais para controlar como as requisi\xe7\xf5es s\xe3o feitas e interpretadas pela API e para enviar dados. Usando nossa analogia da biblioteca:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["Os ",(0,a.jsx)(o.strong,{children:"Header Params"})," s\xe3o como um cart\xe3o de acesso que informa \xe0 biblioteca quem somos e como queremos interagir com ela."]}),"\n",(0,a.jsxs)(o.li,{children:["O ",(0,a.jsx)(o.strong,{children:"Body"})," \xe9 como uma bolsa de livros que trazemos para adicionar ao cat\xe1logo, contendo todos os detalhes necess\xe1rios em um formato organizado."]}),"\n"]}),"\n",(0,a.jsx)(o.p,{children:"Juntos, esses elementos permitem uma comunica\xe7\xe3o complexa e segura entre o cliente (n\xf3s) e o servidor (a biblioteca), cada um atendendo a diferentes necessidades e cen\xe1rios de uso em uma API."})]})}function m(e={}){const{wrapper:o}={...(0,r.M)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},6280:(e,o,s)=>{s.d(o,{c:()=>a});const a=s.p+"assets/images/organizacao-af63a7489364205e54fffafd497ce6b4.webp"},2172:(e,o,s)=>{s.d(o,{I:()=>d,M:()=>n});var a=s(1504);const r={},i=a.createContext(r);function n(e){const o=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),a.createElement(i.Provider,{value:o},e.children)}}}]);