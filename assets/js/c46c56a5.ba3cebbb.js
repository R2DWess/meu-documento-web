"use strict";(self.webpackChunkmeu_documento_web=self.webpackChunkmeu_documento_web||[]).push([[8992],{5084:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var o=s(7624),n=s(2172);const a={title:"Status Code",sidebar_position:5},i=void 0,t={id:"linguagens/protocolos/rest/1.4-status",title:"Status Code",description:"Status Code",source:"@site/docs/linguagens/protocolos/rest/1.4-status.md",sourceDirName:"linguagens/protocolos/rest",slug:"/linguagens/protocolos/rest/1.4-status",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.4-status",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linguagens/protocolos/rest/1.4-status.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Status Code",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Par\xe2metros",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.3-parametros"},next:{title:"Niveis de Maturidade",permalink:"/meu-documento-web/docs/linguagens/protocolos/rest/1.5-niveis"}},c={},d=[{value:"Status Code",id:"status-code",level:2},{value:"Verbos HTTP e o REST",id:"verbos-http-e-o-rest",level:3},{value:"GET: Utilizado para selecionar/ Recuperar um recurso.",id:"get-utilizado-para-selecionar-recuperar-um-recurso",level:4},{value:"POST: Utilizado para criar/ Inserir recurso",id:"post-utilizado-para-criar-inserir-recurso",level:4},{value:"PUT: utilizado para fazer UPDATE/ para mofificar um recurso",id:"put-utilizado-para-fazer-update-para-mofificar-um-recurso",level:4},{value:"DELETE: utilizado para remover um recurso",id:"delete-utilizado-para-remover-um-recurso",level:4},{value:"PATCH",id:"patch",level:3},{value:"HEAD",id:"head",level:3},{value:"TRACE",id:"trace",level:3},{value:"OPTIONS",id:"options",level:3},{value:"CONNECT",id:"connect",level:3}];function l(e){const r={a:"a",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"status-code",children:"Status Code"}),"\n",(0,o.jsx)(r.p,{children:"Forma como o servidor/ API responde aos clients sobre o que ocorreu durante o processamento de uma request."}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Existem 5 grupos de Status Code, s\xe3o eles:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"100 a 102 Informacionais;"}),"\n",(0,o.jsx)(r.li,{children:"200 a 226 Sucesso;"}),"\n",(0,o.jsx)(r.li,{children:"300 a 308 Redirecionamento"}),"\n",(0,o.jsx)(r.li,{children:"400 a 499 Erros de client;"}),"\n",(0,o.jsx)(r.li,{children:"500 a 599 Erro de servidor."}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"\u2728 Links \xdateis:"})}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Oracle:"})," ",(0,o.jsx)(r.a,{href:"https://docs.oracle.com/en/cloud/paas/integration-cloud/rest-api/StatusCodes.html",children:"https://docs.oracle.com/en/cloud/paas/integration-cloud/rest-api/StatusCodes.html"})]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Rest API tutorial:"})," ",(0,o.jsx)(r.a,{href:"https://www.restapitutorial.com/httpstatuscodes.html",children:"https://www.restapitutorial.com/httpstatuscodes.html"})]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"DZone:"})," ",(0,o.jsx)(r.a,{href:"https://dzone.com/refcardz/rest-foundations-restful?chapter=5",children:"https://dzone.com/refcardz/rest-foundations-restful?chapter=5"})]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Semeru:"})," ",(0,o.jsx)(r.a,{href:"http://www.semeru.com.br/blog/http-status-codes-em-servicos-rest/",children:"http://www.semeru.com.br/blog/http-status-codes-em-servicos-rest/"})]}),"\n",(0,o.jsx)(r.h3,{id:"verbos-http-e-o-rest",children:"Verbos HTTP e o REST"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.img,{alt:"alt text",src:s(9432).c+"",width:"1800",height:"680"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Criar novo recurso:"})," HTTP POST"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Buscar ou Ler:"})," HTTP GET"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Atualizar:"})," HTTP PUT or PATCH"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Deletar:"})," HTTP DELETE"]}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"get-utilizado-para-selecionar-recuperar-um-recurso",children:"GET: Utilizado para selecionar/ Recuperar um recurso."}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:'O verbo HTTP GET \xe9 comumente utilizado para ler ou recuperar uma representa\xe7\xe3o de um recurso. Em um "cen\xe1rio feliz", uma requisi\xe7\xe3o GET retorna uma representa\xe7\xe3o em XML ou JSON em um HTTP Status Code 200 (OK). Em um cen\xe1rio de erro o retorno mais comum \xe9 404 (NOT FOUND) ou 400 (BAD REQUEST).'}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Par\xe2metros suportados:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Via URL (PATH ou QUERY PARAMS)"}),"\n",(0,o.jsx)(r.li,{children:"Via HEADER"}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"post-utilizado-para-criar-inserir-recurso",children:"POST: Utilizado para criar/ Inserir recurso"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Verbo HTTP POST \xe9 mais frequentemente usado para criar novos recursos - inserir um novo item na base."}),"\n",(0,o.jsx)(r.li,{children:"Em uma aplica\xe7\xe3o REST perfeita quando uma opera\xe7\xe3o \xe9 executada com sucesso, retorna-se o status code 200 ou 201."}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Par\xe2metros suportados:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Via URL (PATH ou QUERY PARAMS);"}),"\n",(0,o.jsx)(r.li,{children:"Via HEADER;"}),"\n",(0,o.jsx)(r.li,{children:"Via Body."}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"put-utilizado-para-fazer-update-para-mofificar-um-recurso",children:"PUT: utilizado para fazer UPDATE/ para mofificar um recurso"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"O verbo PUT \xe9 comumente usado para atualizar informa\xe7\xf5es, colocando um recurso conhecido no (body) corpo da requisi\xe7\xe3o contendo novas informa\xe7\xf5es que representam o recurso original;"}),"\n",(0,o.jsxs)(r.li,{children:["Um update bem sucedido, retorna um ",(0,o.jsx)(r.strong,{children:"status code"})," 200 (ou 204 quando n\xe3o retorna nenhum conte\xfado no body)."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Par\xe2metros suportados:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Via URL (PATH ou QUERY PARAMS);"}),"\n",(0,o.jsx)(r.li,{children:"Via HEADER;"}),"\n",(0,o.jsx)(r.li,{children:"Via Body. (use-o como prefer\xeancia)"}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"delete-utilizado-para-remover-um-recurso",children:"DELETE: utilizado para remover um recurso"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"O verbo DELETE \xe9 simples de compreender, ele \xe9 usado para deletar um recurso identificado por uma URI;"}),"\n",(0,o.jsxs)(r.li,{children:["Em uma dele\xe7\xe3o bem sucedida retorna-se um ",(0,o.jsx)(r.strong,{children:"status code 200 (OK)"})," juntamente com um response body, pssivelmente uma representa\xe7\xe3o do item deletado (o que acaba por demandar muita banda), ou uma response customizada;"]}),"\n",(0,o.jsxs)(r.li,{children:["Caso considere relevante, pode retornar um ",(0,o.jsx)(r.strong,{children:"Status Code 204 (NO CONTENT)"})," ",(0,o.jsx)(r.strong,{children:"sem"})," response body ou um ",(0,o.jsx)(r.strong,{children:"status code 204"})," ",(0,o.jsx)(r.strong,{children:"sem"})," corpo, ou ",(0,o.jsx)(r.a,{href:"https://github.com/omniti-labs/jsend#:~:text=BSD%2D3%2DCl%C3%A1usula-,JEnviar,-O%20que%3F",children:"JSEND-style"})," response com um status code 200 s\xe3o as responses mais recomendadas."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Par\xe2metros suportados:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Via URL (PATH ou QUERY PARAMS)"}),"\n",(0,o.jsx)(r.li,{children:"Via HEADER;"}),"\n",(0,o.jsx)(r.li,{children:"Via Body."}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"patch",children:"PATCH"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsx)(r.p,{children:"O verbo PATCH pode ser usado para realizar updates parciais de um recurso. Por exemplo, quando voc\xea precisa alterar apenas um campo em um recurso, executar um POST. Com todo, o objeto \xe9 pesado e acarreta em um maior consumo de banda;"}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsx)(r.p,{children:"Demos utiliza-lo com aten\xe7\xe3o! Pois colis\xf5es entre m\xfaltiplos PATCH requests s\xe3o mais perigosos do que colis\xf5es PUT, pois exige que o cliente tenha informa\xe7\xf5es b\xe1sicas do recurso ou it\xe3o corromp\xea-lo."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"head",children:"HEAD"}),"\n",(0,o.jsx)(r.p,{children:"O verbo HEAD possui uma funcionalidade similar ao verbo GET, exceto pelo fato do servidor retornar uma response line e geaders, mas sem um entity-body."}),"\n",(0,o.jsx)(r.h3,{id:"trace",children:"TRACE"}),"\n",(0,o.jsx)(r.p,{children:"O verbo TRACE \xe9 usado para recuperar o conte\xfado de uma requisi\xe7\xe3o HTTP de volta, podendo ser usado com o prop\xf3sito de debug durante o processo de desenvolvimento."}),"\n",(0,o.jsx)(r.h3,{id:"options",children:"OPTIONS"}),"\n",(0,o.jsx)(r.p,{children:"O verbo OPTIONS \xe9 usado pelo cliente para encontrar opera\xe7\xf5es HTTP e outras op\xe7\xf5es suportadas pelo servidor. O cliente pode especificar uma URL para o verbo OPTIONS ou um asterisco (*) para se referir a todo o servidor."}),"\n",(0,o.jsx)(r.h3,{id:"connect",children:"CONNECT"}),"\n",(0,o.jsx)(r.p,{children:"O verbo CONNECT \xe9 usado pelo cliente para estabelecer uma conex\xe3o de rede com um servidor via HTTP."})]})}function u(e={}){const{wrapper:r}={...(0,n.M)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},9432:(e,r,s)=>{s.d(r,{c:()=>o});const o=s.p+"assets/images/verbos-bf2ebfe4804e2c1c39218a37989aabcf.png"},2172:(e,r,s)=>{s.d(r,{I:()=>t,M:()=>i});var o=s(1504);const n={},a=o.createContext(n);function i(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(a.Provider,{value:r},e.children)}}}]);